"""
Django settings for prueba project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6sev_97h_ihwo^c7ug&tsqk!73ce6%q@bdir)3&wine0w7h7@&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = ['*']
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Application definition

INSTALLED_APPS = [
    'users.apps.UsersConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'issues.apps.IssuesConfig',
    'issues.templatetags',
    'widget_tweaks',
    'crispy_forms',
    'crispy_bootstrap4',
    'rest_framework',
    'rest_framework.authtoken',
    'api.apps.ApiConfig',
    'django_filters',
]

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'prueba.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'users/templates'),
            os.path.join(BASE_DIR, 'issues/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prueba.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_ID = 9
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_EMAIL_REQUIRED = False

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
    }
}
ACCOUNT_SIGNUP_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/issues/'
LOGIN_URL = '/accounts/login/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Firebase Configuration
FIREBASE_CONFIG = {
    'apiKey': os.environ.get('FIREBASE_API_KEY'),
    'authDomain': os.environ.get('FIREBASE_AUTH_DOMAIN'),
    'projectId': os.environ.get('FIREBASE_PROJECT_ID'),
    'storageBucket': os.environ.get('FIREBASE_STORAGE_BUCKET'),
    'messagingSenderId': os.environ.get('FIREBASE_MESSAGING_SENDER_ID'),
    'appId': os.environ.get('FIREBASE_APP_ID'),
    'measurementId': os.environ.get('FIREBASE_MEASUREMENT_ID'),
    'credentials': os.path.join(BASE_DIR, os.environ.get('FIREBASE_CREDENTIALS_PATH', 'credentials/firebase-credentials.json'))
}

# File Storage Configuration
if DEBUG:
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
else:
    DEFAULT_FILE_STORAGE = 'storages.backends.firebase.FirebaseStorage'

# AWS S3 Configuration
AWS_ACCESS_KEY_ID = 'ASIAUGGDWQZNCA2J7J2E'
AWS_SECRET_ACCESS_KEY = 'actcq83hp3nhzK53g5C3zNuAxcKf1EF7o8FbQEBx'
AWS_SESSION_TOKEN = 'IQoJb3JpZ2luX2VjEDcaCXVzLXd1c3QtMiJHMEUCIGX8/hpJlxHItrgCqNXgTd44X0CK6MaIbOpmnuWkNl7FAiEAhx+TSJSP3Vlq43hVksB1nCcwR6JZhwp5Q8tb2q3T72UqwgIiP/////////8ARAAAGgwzMzk3MTM4MzcyMTA4IgxhDG6rTdzSW6T3vTBFXyvMAjzCNXT3KncY3W2XQa4mAntU3wUkecHmPN7PIGeskRHwNZ5olEu+tbSDex29o1ESy0JfEnvYWKL9VeV6rMQXFC+vrWu7060+JW24qooOMJln0kbvk9+ECyoK7K6VIRF6Ph3+MJrOeLVrG1Dz3S1ZmJodZ6nj/L/LYeBwfZtdAaR3tG5RHwwBhN+LXRH4+cJT0ipjY0x181MsF1sPhBXH7HFkowFexB863xw1SYW54eWVdFhPvjYZmm9fBVn2IcIH7NXSDK0+EJHhpsqh46pimA/g18JMXWg5vDzAVsYFYB4cPmG4MDQydvXX/NTxQTI4sjDI/72c2DJ67W2PpfnFjCc9FwoCGylgm+TUuhTNjQfrdLJXX2BMP2K4b8GDpBBBqVdiz0l7mfnguoPuUB4sgPq3x2ll80+SUe4/XLdBmfIVAEH1P+y+igbrbsDRMOI1xxEnWkEVCFR8FaDD2Pd2elcwmPjKmrtwUdijbtXpCogPrT0tSKcZS34WJcODk8jEi8cNQETQjsFKzn3no0FIqZ3sY87z1R4OcIzpd6wYiRB1rxQBfGPCnQPGK15GI/LmKpSSDAxZ88cRpRg=='
AWS_STORAGE_BUCKET_NAME = 'attachments'
AWS_S3_REGION_NAME = 'us-east-1'

# S3 Storage Configuration
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# Additional S3 Settings
AWS_S3_FILE_OVERWRITE = False  # No sobreescriure arxius amb el mateix nom
AWS_DEFAULT_ACL = None  # Utilitzar la configuraci√≥ per defecte del bucket
AWS_S3_VERIFY = True  # Verificar certificats SSL

